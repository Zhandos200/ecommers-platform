version: "3.9"

services:
  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222" # Monitoring port
    networks:
      - micro_net

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: assbreaker2023
      DB_NAME: inventory
    ports:
      - "8081:8081"
      - "50053:50053" # gRPC
    volumes:
      - ./inventory-service/.env:/app/.env
      - ./templates:/app/templates
    networks:
      - micro_net

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: assbreaker2023
      DB_NAME: users
    ports:
      - "8083:8083"
      - "50051:50051" # gRPC
    networks:
      - micro_net

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: assbreaker2023
      DB_NAME: orders
      NATS_URL: nats://nats:4222 # point to NATS container
    ports:
      - "8082:8082"
      - "50052:50052" # gRPC
    depends_on:
      - nats
    restart: always
    networks:
      - micro_net

  consumer-service:
    build:
      context: ./consumer-service
    container_name: consumer-service
    environment:
      NATS_URL: nats://nats:4222
    depends_on:
      - nats
      - inventory-service
    networks:
      - micro_net

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    depends_on:
      - inventory-service
      - order-service
      - user-service
    ports:
      - "8080:8080"
    networks:
      - micro_net

networks:
  micro_net:
    driver: bridge
